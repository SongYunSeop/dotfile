""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vimrc
"
" Author:

"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Plugin Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin()

Plug 'benmills/vimux'
Plug 'pitluga/vimux-nose-test'

Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'kien/ctrlp.vim'
Plug 'vim-scripts/ctrlp-z'

Plug 'Valloric/YouCompleteMe'

Plug 'flazz/vim-colorschemes'

call plug#end()


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   General Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Sets history line
set history=500

" Mapping <leader> => ,
let mapleader=","

" Show current position at bottom-right
set ruler

set lazyredraw

set magic

" Show matching brackets when text indicator is over them
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=2

" Show line number
set number

" Set line number relative
set relativenumber


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Search Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Ignore case when searching
set ignorecase

" Be smart when searching
set smartcase

" Highlight search last result
set hlsearch

" Move cursor when searching
set incsearch


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Color Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Syntax Enable
syntax on

" Use color scheme 'onedark'
colorscheme onedark

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Indent Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" tab == 4 space
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Using tab like 4 space
set expandtab
set smarttab

" Auto Indent
"set ai
" Smart Indent
"set si


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Key Mapping
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ,vi =>  Show edit tab .vimrc
nnoremap <leader>vi :tabe ~/.vimrc<CR>

" ,src => Reload .vimrc
nnoremap <leader>src :source ~/.vimrc<CR>

nnoremap <leader>b :set wrap!<CR>

" ,q => Quit
map <leader>q <ESC><ESC>:q<CR>


" F2 => Save File
imap <F2> <ESC><ESC>:w<CR>
map <F2> <ESC><ESC>:w<CR>

" ,w => Save File
imap <leader>w <ESC><ESC>:w<CR>
map <leader>w <ESC><ESC>:w<CR>

" F3 => Toggle line number
map <F3> <ESC>:set nu! relativenumber!<CR>

" jk => esc, Escape insert mode
inoremap jk <ESC>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   Moving tab Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-h> <C-W>h
nmap <C-l> <C-W>l


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   NERDTree Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" F9 => Toggle NERDTree
map <F9> :NERDTreeToggle<CR>

" Setting NERDTree Ignore Files
let NERDTreeIgnore=['\.pyc$', '__pycache__']


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   nosetest Setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let test#strategy="vimux"

nmap <silent> <leader>t :RunNoseTestFocused<CR>
nmap <silent> <leader>T :RunNoseTestBuffer<CR>

let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
let g:ycm_use_ultisnips_completer = 1 " Default 1, just ensure
let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
let g:ycm_complete_in_comments = 1 " Completion in comments
let g:ycm_complete_in_strings = 1 " Completion in string

let g:ycm_key_list_select_completion = ['<C-j>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-k>', '<Up>']

map <F4> :YcmCompleter GoTo<CR>
